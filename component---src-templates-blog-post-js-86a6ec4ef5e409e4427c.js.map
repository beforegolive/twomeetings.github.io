{"version":3,"sources":["webpack:///./src/components/bio.js","webpack:///./src/components/comments.js","webpack:///./src/templates/blog-post.js"],"names":["Bio","style","display","marginBottom","rhythm","Comments","componentDidMount","Gitalk","clientID","clientSecret","repo","owner","admin","id","window","location","pathname","distractionFreeMode","render","Component","pageQuery","BlogPostTemplate","data","pageContext","post","markdownRemark","siteTitle","site","siteMetadata","title","coverUrl","frontmatter","cover","publicURL","previous","next","description","excerpt","src","className","marginTop","scale","date","dangerouslySetInnerHTML","__html","html","flexWrap","justifyContent","listStyle","padding","to","fields","slug","rel"],"mappings":"6OAwEeA,EA3DH,WA8BX,OACC,yBACCC,MAAO,CACNC,QAAQ,OACRC,aAAcC,YAAO,S,yDCxBVC,G,UAnBf,0GACCC,kBAAA,WACgB,IAAIC,IAAO,CACzBC,SAAU,uBACVC,aAAc,2CACdC,KAAM,wBACNC,MAAO,cACPC,MAAO,CAAC,eACRC,GAAIC,OAAOC,SAASC,SACpBC,qBAAqB,IAGfC,OAAO,qBAZhB,EAcCA,OAAA,WACC,OAAO,yBAAKL,GAAG,sBAfjB,GAA8BM,cCmFjBC,G,UAFEC,UA3EU,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,YAAaR,EAAe,EAAfA,SACxCS,EAAOF,EAAKG,eACXC,EAAYJ,EAAKK,KAAKC,aAAaC,MACnCC,EAAWN,EAAKO,YAAYC,OAASR,EAAKO,YAAYC,MAAMC,UAC3DC,EAAmBX,EAAnBW,SAAUC,EAASZ,EAATY,KAElB,OACC,kBAAC,IAAD,CAAQpB,SAAUA,EAAUc,MAAOH,GAClC,kBAAC,IAAD,CACCG,MAAOL,EAAKO,YAAYF,MACxBO,YAAaZ,EAAKO,YAAYK,aAAeZ,EAAKa,UAEnD,iCACC,gCACM,yBAAKC,IAAKR,EAAUS,UAAU,UACnC,wBACCtC,MAAO,CACNuC,UAAWpC,YAAO,GAClBD,aAAc,IAGdqB,EAAKO,YAAYF,OAEnB,uBACC5B,MAAK,iBACDwC,aAAM,IADL,CAEJvC,QAAQ,QACRC,aAAcC,YAAO,MAGrBoB,EAAKO,YAAYW,OAGpB,6BAASC,wBAAyB,CAAEC,OAAQpB,EAAKqB,QACjD,wBACC5C,MAAO,CACNE,aAAcC,YAAO,MAGvB,gCACC,kBAAC,EAAD,QAIF,6BACC,wBACCH,MAAO,CACNC,QAAQ,OACR4C,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGV,4BACEf,GACA,kBAAC,OAAD,CAAMgB,GAAIhB,EAASiB,OAAOC,KAAMC,IAAI,QAApC,KACInB,EAASH,YAAYF,QAI3B,4BACEM,GACA,kBAAC,OAAD,CAAMe,GAAIf,EAAKgB,OAAOC,KAAMC,IAAI,QAC9BlB,EAAKJ,YAAYF,MADnB,SAOJ,kBAAC,EAAD,QAOmB","file":"component---src-templates-blog-post-js-86a6ec4ef5e409e4427c.js","sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react'\n// import { useStaticQuery, graphql } from 'gatsby'\n// import Image from 'gatsby-image'\n\nimport { rhythm } from '../utils/typography'\n\nconst Bio = () => {\n\t// const data = useStaticQuery(graphql`\n\t// \tquery BioQuery {\n\t// \t\tavatar: file(absolutePath: { regex: \"/avatar.png/\" }) {\n\t// \t\t\tchildImageSharp {\n\t// \t\t\t\tfixed(width: 50, height: 50) {\n\t// \t\t\t\t\tbase64\n  //           width\n  //           height\n  //           src\n  //           srcSet\n\t// \t\t\t\t}\n\t// \t\t\t}\n\t// \t\t}\n\t// \t\tsite {\n\t// \t\t\tsiteMetadata {\n\t// \t\t\t\tauthor {\n\t// \t\t\t\t\tname\n\t// \t\t\t\t\tsummary\n\t// \t\t\t\t}\n\t// \t\t\t\tsocial {\n\t// \t\t\t\t\ttwitter\n\t// \t\t\t\t\tgithub\n\t// \t\t\t\t}\n\t// \t\t\t}\n\t// \t\t}\n\t// \t}\n\t// `)\n\n\t// const { author, social } = data.site.siteMetadata\n\treturn (\n\t\t<div\n\t\t\tstyle={{\n\t\t\t\tdisplay: `flex`,\n\t\t\t\tmarginBottom: rhythm(2.5)\n\t\t\t}}\n\t\t>\n\t\t\t{/* <Image\n\t\t\t\tfixed={data.avatar.childImageSharp.fixed}\n\t\t\t\talt={author.name}\n\t\t\t\tstyle={{\n\t\t\t\t\tmarginRight: rhythm(1 / 2),\n\t\t\t\t\tmarginBottom: 0,\n\t\t\t\t\tminWidth: 50,\n\t\t\t\t\tborderRadius: `100%`\n\t\t\t\t}}\n\t\t\t\timgStyle={{\n\t\t\t\t\tborderRadius: `50%`\n\t\t\t\t}}\n\t\t\t/>\n\t\t\t<p>\n\t\t\t\t<strong>{author.name}</strong> {author.summary}\n\t\t\t\t{` `}\n\t\t\t\t<a href={`https://github.com/${social.github}`}>Github</a>\n\t\t\t</p> */}\n\t\t</div>\n\t)\n}\n\nexport default Bio\n","import React, { Component } from 'react'\nimport Gitalk from 'twomeetings-gitalk'\nimport 'gitalk/dist/gitalk.css'\n\nexport class Comments extends Component {\n\tcomponentDidMount() {\n\t\tconst gitalk = new Gitalk({\n\t\t\tclientID: '1d481fc0172197173fb8',\n\t\t\tclientSecret: '887bb8f09c5d35f4bdd70044060ce9ba09663d73',\n\t\t\trepo: 'twomeetings.github.io',\n\t\t\towner: 'twomeetings',\n\t\t\tadmin: ['twomeetings'],\n\t\t\tid: window.location.pathname, // Ensure uniqueness and length less than 50\n\t\t\tdistractionFreeMode: false // Facebook-like distraction free mode\n\t\t})\n\n\t\tgitalk.render('gitalk-container')\n\t}\n\trender() {\n\t\treturn <div id=\"gitalk-container\"></div>\n\t}\n}\n\nexport default Comments\n","import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport Bio from '../components/bio'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport Comments from '../components/comments'\nimport { rhythm, scale } from '../utils/typography'\nimport './blog-post.scss'\n\nconst BlogPostTemplate = ({ data, pageContext, location }) => {\n\tconst post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata.title\n  const coverUrl = post.frontmatter.cover && post.frontmatter.cover.publicURL\n\tconst { previous, next } = pageContext\n\n\treturn (\n\t\t<Layout location={location} title={siteTitle}>\n\t\t\t<SEO\n\t\t\t\ttitle={post.frontmatter.title}\n\t\t\t\tdescription={post.frontmatter.description || post.excerpt}\n\t\t\t/>\n\t\t\t<article>\n\t\t\t\t<header>\n          <img src={coverUrl} className='cover' />\n\t\t\t\t\t<h1\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tmarginTop: rhythm(1),\n\t\t\t\t\t\t\tmarginBottom: 0\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{post.frontmatter.title}\n\t\t\t\t\t</h1>\n\t\t\t\t\t<p\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t...scale(-1 / 5),\n\t\t\t\t\t\t\tdisplay: `block`,\n\t\t\t\t\t\t\tmarginBottom: rhythm(1)\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t{post.frontmatter.date}\n\t\t\t\t\t</p>\n\t\t\t\t</header>\n\t\t\t\t<section dangerouslySetInnerHTML={{ __html: post.html }} />\n\t\t\t\t<hr\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tmarginBottom: rhythm(1)\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t\t<footer>\n\t\t\t\t\t<Bio />\n\t\t\t\t</footer>\n\t\t\t</article>\n\n\t\t\t<nav>\n\t\t\t\t<ul\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tdisplay: `flex`,\n\t\t\t\t\t\tflexWrap: `wrap`,\n\t\t\t\t\t\tjustifyContent: `space-between`,\n\t\t\t\t\t\tlistStyle: `none`,\n\t\t\t\t\t\tpadding: 0\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t{previous && (\n\t\t\t\t\t\t\t<Link to={previous.fields.slug} rel=\"prev\">\n\t\t\t\t\t\t\t\t← {previous.frontmatter.title}\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</li>\n\t\t\t\t\t<li>\n\t\t\t\t\t\t{next && (\n\t\t\t\t\t\t\t<Link to={next.fields.slug} rel=\"next\">\n\t\t\t\t\t\t\t\t{next.frontmatter.title} →\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</li>\n\t\t\t\t</ul>\n\t\t\t</nav>\n\t\t\t<Comments />\n\t\t</Layout>\n\t)\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n\tquery BlogPostBySlug($slug: String!) {\n\t\tsite {\n\t\t\tsiteMetadata {\n\t\t\t\ttitle\n\t\t\t}\n\t\t}\n\t\tmarkdownRemark(fields: { slug: { eq: $slug } }) {\n\t\t\tid\n\t\t\texcerpt(pruneLength: 160)\n\t\t\thtml\n\t\t\tfrontmatter {\n\t\t\t\ttitle\n\t\t\t\tdate(formatString: \"MMMM DD, YYYY\")\n        description\n        cover {\n          publicURL\n        }\n\t\t\t}\n\t\t}\n\t}\n`\n"],"sourceRoot":""}