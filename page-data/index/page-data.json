{"componentChunkName":"component---src-pages-index-js","path":"/","result":{"data":{"site":{"siteMetadata":{"title":"Tech blog"}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"hello world","fields":{"slug":"/20200327-helloworld/"},"frontmatter":{"date":"March 27, 2020","title":"Hello World","description":null}}},{"node":{"excerpt":"前四篇文章介绍了webpack基本的使用之后，这一篇逐步演示一个webpack结合react的项目，其中只包含react最基本的使用，所以没用过react的不必担心。当然，也可以通过react…","fields":{"slug":"/20160226-webpack系列之五－与react框架结合/"},"frontmatter":{"date":"February 26, 2016","title":"webpack系列之五－与react框架结合","description":null}}},{"node":{"excerpt":"css的提取和合并 在webpack模版插件下，可以对css做提取和合并成一个文件，从而达到优化性能和方便管理的目的。比如我们现在需要index.js文件中引入两个css文件： 提取和合并的工作就需要用到插件‘extract-text-webpack-plugin…","fields":{"slug":"/20160208-webpack系列之四 - 配置文件解析/"},"frontmatter":{"date":"February 08, 2016","title":"webpack系列之四－资源文件的整合","description":null}}},{"node":{"excerpt":"webpack框架内置了20多种插件，除此之外的开源社区也存在很多优秀的第三方插件，利用这些插件可以轻松扩展webpack到功能，给使用者带来极大的便利。 在web开发中，模版文件基本不可或缺，它抽取出通用部分，为编写代码节省了大量的时间。在webpack…","fields":{"slug":"/20160119-webpack系列之三 - 插件的使用/"},"frontmatter":{"date":"January 19, 2016","title":"webpack系列之三 - 插件的使用","description":null}}},{"node":{"excerpt":"使用配置文件是webpack的基本用法，默认的配置文件名是webpack.config.js，只需把这个文件创建在根目录下，webpack编译时就会自动加载。 在开篇文章里，一个简单示例展示了webpack…","fields":{"slug":"/20160115-webpack系列之二 - 配置文件解析/"},"frontmatter":{"date":"January 15, 2016","title":"webpack系列之二 - 配置文件解析","description":null}}},{"node":{"excerpt":"为什么要用Webpack？它是什么？ 随着nodejs的迅猛发展，javascript不断进化，且逐渐变成服务器端开发的主流，而在前端领域它能做的事情也越来越多。可是，不断增多的js代码管理起来却让人头疼，模块化是唯一的解决办法，常见的做法是将不同功能的js…","fields":{"slug":"/20160108-Webpack系列开篇/"},"frontmatter":{"date":"January 08, 2016","title":"webpack系列－开篇","description":"webpack系列－开篇 第一篇"}}}]}},"pageContext":{}}}