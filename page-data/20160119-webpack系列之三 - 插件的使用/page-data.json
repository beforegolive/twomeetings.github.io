{"componentChunkName":"component---src-templates-blog-post-js","path":"/20160119-webpack系列之三 - 插件的使用/","result":{"data":{"site":{"siteMetadata":{"title":"Tech blog"}},"markdownRemark":{"id":"4cc3f00d-bef8-5824-8356-c95e10d66870","excerpt":"webpack框架内置了20多种插件，除此之外的开源社区也存在很多优秀的第三方插件，利用这些插件可以轻松扩展webpack到功能，给使用者带来极大的便利。 在web开发中，模版文件基本不可或缺，它抽取出通用部分，为编写代码节省了大量的时间。在webpack…","html":"<p>webpack框架内置了20多种插件，除此之外的开源社区也存在很多优秀的第三方插件，利用这些插件可以轻松扩展webpack到功能，给使用者带来极大的便利。</p>\n<p>在web开发中，模版文件基本不可或缺，它抽取出通用部分，为编写代码节省了大量的时间。在webpack中也有模版文件的功能，不过它是通过第三方插件来实现的，这个插件叫HtmlWebpackPlugin。可通过下面命令安装：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm install html-webpack-plugin --save</code></pre></div>\n<p>现在我们通过这个插件来创建index页面。先在一个目录下初始化项目:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm init</code></pre></div>\n<p>然后创建一个模块入口文件index.js。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// add index.js\nconsole.log(&#39;index&#39;)</code></pre></div>\n<p>然后我们来创建模版文件template.html。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;meta charset=&quot;utf-8&quot;&gt;\n    &lt;title&gt;&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;div&gt;\n    \t&lt;h2&gt;&lt;%- htmlWebpackPlugin.options.title %&gt;&lt;/h2&gt;\n    &lt;/div&gt;\n  &lt;/body&gt;\n&lt;/html&gt;</code></pre></div>\n<p>模版文件中有一句表达式&#x3C;%- htmlWebpackPlugin.options.title %>，用来显示某个对象点title属性，这个属性就来自于webpack与HtmlWebpackPlugin插件相关的配置节点。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">// 创建 webpack.config.js\nmodule.exports={\n entry:&#39;./index.js&#39;,\n output:{\n   path: __dirname,\n   filename: &quot;bundle_[name].js&quot;\n },\n plugins:[\n \tnew HtmlWebpackPlugin({title:&#39;Index Page&#39;,template:&#39;template.html&#39;,filename:&#39;index.html&#39;, chunks:[&#39;index&#39;]})\n ]\n};</code></pre></div>\n<p>可以看到对应的index模块中模版插件的title值为‘Index Page’。</p>\n<p>现在执行编译命令：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">webpack</code></pre></div>\n<p>当前目录下生成index.html文件，用浏览器打开如下：</p>\n<h3>添加新的页面</h3>\n<p>在当前模版下，添加页面变的容易许多，比如我们添加的页面叫basic。首先添加模版入口文件basic.js，内容如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">console.log(&#39;basic&#39;)</code></pre></div>\n<p>之后修改配置文件的entry属性，加入basic模块。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">entry:{\n\tindex: &#39;./index.js&#39;,\n\tbasic: &#39;./basic.js&#39;\n}</code></pre></div>\n<p>然后添加一个新的HtmlWebPackPlugin插件给basic模块。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">plugins:[\n  \tnew HtmlWebpackPlugin({title:&#39;Index Page&#39;,template:&#39;template.html&#39;,filename:&#39;index.html&#39;, chunks:[&#39;index&#39;]})\n  ],\n  \tnew HtmlWebpackPlugin({title:&#39;Basic Page&#39;,template:&#39;template.html&#39;,filename:&#39;basic.html&#39;, chunks:[&#39;basic&#39;]})\n  ]</code></pre></div>\n<p>执行编译命令：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">webpack</code></pre></div>\n<p>这样以basic.js为模块的basic.html页面就添加好了。</p>\n<h3>模板变量</h3>\n<p>该模板插件中内置了一些变量，可以通过“&#x3C;%= %>”来引用，当需要对变量中的内容编码时，可以使用“&#x3C;%- %>”。具体的模版属性可以访问<a href=\"https://github.com/ampedandwired/html-webpack-plugin\">此处</a>查看官方说明。</p>\n<blockquote>\n<p>模板编译时无法用console.log查看信息，此处通过Object.keys()的方式罗列出所有的属性参数。</p>\n</blockquote>\n<h3>示例代码</h3>\n<p>本文相关代码可在<a href=\"https://github.com/twomeetings/webpackPluginExtension\">此处</a>查询。</p>","frontmatter":{"title":"webpack系列之三 - 插件的使用","date":"January 19, 2016","description":null}}},"pageContext":{"slug":"/20160119-webpack系列之三 - 插件的使用/","previous":{"fields":{"slug":"/20160115-webpack系列之二 - 配置文件解析/"},"frontmatter":{"title":"webpack系列之二 - 配置文件解析"}},"next":{"fields":{"slug":"/20160208-webpack系列之四 - 配置文件解析/"},"frontmatter":{"title":"webpack系列之四－资源文件的整合"}}}}}