{"componentChunkName":"component---src-templates-blog-post-js","path":"/20160226-webpack系列之五－与react框架结合/","result":{"data":{"site":{"siteMetadata":{"title":"Tech blog"}},"markdownRemark":{"id":"03a80e41-c8f4-5cd4-9e29-5cc0200adcc1","excerpt":"前四篇文章介绍了webpack基本的使用之后，这一篇逐步演示一个webpack结合react的项目，其中只包含react最基本的使用，所以没用过react的不必担心。当然，也可以通过react…","html":"<p>前四篇文章介绍了webpack基本的使用之后，这一篇逐步演示一个webpack结合react的项目，其中只包含react最基本的使用，所以没用过react的不必担心。当然，也可以通过<a href=\"http://twomeetings.github.io/2016/05/08/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E6%96%87%E6%B1%87%E6%80%BB/\">react系列文章</a>查看其用法。</p>\n<h3>初始化项目</h3>\n<p>首先，在一个目录下初始化项目，执行以下命令，然后一路回车到底。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm init</code></pre></div>\n<blockquote>\n<p>初始化时不要将项目名称命名为模块名，比如react，这样会导致下面的react安装出错。</p>\n</blockquote>\n<p>假如没有安装过webpack的，需要先将webpack安装到全局环境，可顺便在此处连简易服务器组件webpack-dev-server一起安装，该组件说明可在<a href=\"http://twomeetings.github.io/2016/01/05/Webpack%20%E7%B3%BB%E5%88%97%E5%BC%80%E7%AF%87%E4%B8%80/\">系列文章第一篇</a>找到。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm install webpack webpack-dev-server -g</code></pre></div>\n<h3>添加webpack配置文件</h3>\n<p>添加配置文件webpack.config.js,将index.js做为模块入口，且用加载器babel-loader来处理js文件，内容如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">module.exports={\n  entry:&#39;./index.js&#39;,\n  output:{\n    path: __dirname+&#39;/dist&#39;,\n    filename: &quot;bundle_[name].js&quot;\n  },\n  module:{\n    loaders:[\n      {test: /\\.jsx?$/, loader:&quot;babel&quot;}\n    ]\n  }\n};</code></pre></div>\n<blockquote>\n<p>配置文件内各节点的含义可查阅<a href=\"http://twomeetings.github.io/2016/01/15/webpack%E7%B3%BB%E5%88%97%E4%BA%8C%20%EF%BC%8D%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/\">系列文章第二篇</a></p>\n</blockquote>\n<h3>安装react相关的组件</h3>\n<p>为了让react能运作正常，除了加载器babel-loader，还需要另外两个插件babel-preset-es2015，babel-preset-react，前者用来支持ES6语法，后者则是支持react语法，安装命令如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm install babel-loader babel-preset-es2015 babel-preset-react --save</code></pre></div>\n<p>这两个语法插件需写在配置文件中才能生效，像这样：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{\n    {test: /\\.jsx?$/, loader:&quot;babel&quot;, query : { presets:[&#39;es2015&#39;,&#39;react&#39;]}}\n}</code></pre></div>\n<p>或者也可添加一个名为.babelrc的文件，填入以下内容，编译时该文件会被自动加载。两种方法都可，这里我们采用后者。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">{\n  &quot;presets&quot;:[&quot;es2015&quot;, &quot;react&quot;]\n}</code></pre></div>\n<blockquote>\n<p>假如不使用babel-preset-es2015，es6的语法（如import）将无法被识别。</p>\n</blockquote>\n<p>现在所有准备工作就绪，我们现在执行安装命令引入react，当前版本的react推荐使用react-dom来操作html元素，所以要一并安装</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm install react react-dom --save</code></pre></div>\n<h3>编写React代码</h3>\n<p>添加入口文件index.js，编写一个名为HelloWorld的组件，在”id＝react-div”的html元素上呈现一段文字，代码如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">import React from &#39;react&#39;\nimport ReactDOM from &#39;react-dom&#39;\n\nvar HelloWorld=React.createClass({\n  render(){\n    return(\n      &lt;p&gt;Hello World, Hello React. &lt;/p&gt;\n    )\n  }\n})\n\nReactDOM.render(\n  &lt;HelloWorld /&gt;,\n  document.getElementById(&#39;react-div&#39;)\n)\t</code></pre></div>\n<p>现在只需一个包含id为react-div元素的html页面就可以看到最终效果，我们可以手动添加，也可以利用<a href=\"http://twomeetings.github.io/2016/01/19/webpack%E7%B3%BB%E5%88%97%E4%B9%8B%E4%B8%89%EF%BC%8Dplugin%E6%8F%92%E4%BB%B6/\">系列文章第三篇</a>中谈及的模板插件来创建页面。</p>\n<h3>模版插件添加HTML页面</h3>\n<p>安装模版插件html-webpack-plugin，因为其依赖webpack，所以要一并安装，执行命令如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm install webpack html-webpack-plugin --save</code></pre></div>\n<p>修改配置文件为如下所示：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">var HtmlWebpackplugin=require(&#39;html-webpack-plugin&#39;);\n\nmodule.exports={\n  entry:{\n    index : &#39;./index.js&#39;\n  },\n  output:{\n    path: __dirname+&#39;/dist&#39;,\n    filename: &quot;bundle_[name].js&quot;\n  },\n  module:{\n    loaders:[\n      {test: /\\.jsx?$/, exclude:/node_modules/, loader:&quot;babel&quot;}\n    ]\n  },\n  plugins:[\n    new HtmlWebpackplugin({title:&#39;Index Page&#39;, template:&#39;template.html&#39;, filename:&#39;index.html&#39;, chunks:[&#39;index&#39;]})\n  ]\n};</code></pre></div>\n<p>添加模板文件template.html:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;meta charset=&quot;utf-8&quot;&gt;\n    &lt;title&gt;&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;div id=&#39;react-div&#39;&gt;&lt;/div&gt;\n  &lt;/body&gt;\n&lt;/html&gt;</code></pre></div>\n<p>执行编译命令：</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">webpack</code></pre></div>\n<p>编译成功后，再执行下面命令启动简易服务器。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">webpack-dev-server</code></pre></div>\n<p>最后，就可以通过浏览器访问服务器默认地址 <a href=\"http://localhost:8080/webpack-dev-server/\">http://localhost:8080/webpack-dev-server/</a> 查看效果。</p>\n<h3>示例代码</h3>\n<p>这样一个webpack和react相结合的项目就搭建完成，假如你按上面步骤操作碰到了问题，可直接到<a href=\"https://github.com/twomeetings/webpackAndReact\">这里</a>下载示例代码。</p>","frontmatter":{"title":"webpack系列之五－与react框架结合","date":"February 26, 2016","description":null}}},"pageContext":{"slug":"/20160226-webpack系列之五－与react框架结合/","previous":{"fields":{"slug":"/20160208-webpack-part-4/"},"frontmatter":{"title":"webpack系列之四－资源文件的整合"}},"next":{"fields":{"slug":"/20200327-helloworld/"},"frontmatter":{"title":"Hello World"}}}}}